# -*- coding: utf-8 -*-
"""Monkey Banana Problem using Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RRwa4GRyeKsCRROffymip0gZ6hsFxDSa
"""

#defining the class
class MonkeyBananaProblem:
    #states
    def __init__(self):
        self.state = {'monkey': 'floor', 'block': 'center', 'banana': 'hanging'}
    #defining the execution function
    def execute_action(self, action):
      #all state info in the loop form
        if action == 'climb':
            if self.state['monkey'] == 'floor' and self.state['block'] == 'center':
                self.state['monkey'] = 'on block'
        elif action == 'push' or action == 'drag':
            if self.state['monkey'] == 'on block':
                self.state['block'] = 'center'
        elif action == 'walk':
            if self.state['monkey'] == 'floor':
                self.state['monkey'] = 'floor'
        elif action == 'grasp':
            if self.state['monkey'] == 'on block' and self.state['block'] == 'center' and self.state['banana'] == 'hanging':
                self.state['banana'] = 'grasped'
    #final state of the monkey
    def can_get(self):
        return self.state['banana'] == 'grasped'

def main():
    problem = MonkeyBananaProblem()
    #action must go like this
    actions = ['climb', 'push', 'drag', 'walk', 'grasp']
    #loop for not getting into the right state
    while not problem.can_get():
        print("Current State:", problem.state)
        action = input("Enter action (climb, push, drag, walk, grasp): ").strip().lower()
        if action not in actions:
           #show invalid
            print("Invalid action, please try again.")
            continue
        problem.execute_action(action)
gra
    print("Monkey has got the banana!")
if __name__ == "__main__":
    main()